{"version":3,"sources":["images/header-logo.svg","images/success.svg","images/error.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","hooks/useFormWithValidation.js","components/Input.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","utils/api.js","utils/utils.js","components/AuthForm.js","components/Login.js","components/Register.js","components/ProtectedRoute.js","utils/auth.js","components/InfoTooltip.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","loggedIn","userEmail","onClick","className","to","src","logo","alt","exact","path","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","_id","useContext","isOwn","owner","isLiked","likes","some","i","type","aria-label","link","name","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","isCardsLoading","about","avatar","map","key","Footer","PopupWithForm","forwardRef","ref","isValid","title","children","isOpen","onClose","onSubmit","buttonText","action","noValidate","disabled","useFormWithValidation","useState","values","setValues","errors","setErrors","setIsValid","resetForm","useCallback","newValues","newErrors","newIsValid","handleChange","event","target","value","validationMessage","Input","changeValue","classBlock","rest","onChange","e","EditProfilePopup","onUpdateUser","isSending","currentUser","valid","createRef","useEffect","current","checkValidity","preventDefault","placeholder","required","minLength","maxLength","autoComplete","EditAvatarPopup","onUpdateAvatar","AddPlacePopup","ImagePopup","api","baseUrl","headers","this","_url","_headers","response","ok","json","Promise","reject","status","fetch","then","res","_handleResponse","formData","method","body","JSON","stringify","id","like","authorization","AuthForm","loginLink","email","password","Login","onLogin","registerForm","Register","onRegister","ProtectedRoute","routeProps","BASE_URL","handleResponse","InfoTooltip","message","isSuccess","success","error","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","cardDelete","setCardDelete","isDeletteReqPopupOpen","setIsDeletteReqPopupOpen","setIsCardsLoading","isDataSending","setDataSending","setLoggedIn","isInfoTooltipPopupOpen","setIsInfoTooltipPopupOpen","isInfoTooltipTypeSuccess","setIsInfoTooltipTypeSuccess","infoTooltipMessage","setInfoTooltipMessage","setUserEmail","history","useHistory","closeAllPopups","tokenCheck","token","localStorage","getItem","Accept","Authorization","auth","userData","data","push","catch","err","console","log","all","getInitialCards","getUserInfo","cardElements","user","finally","escFunction","keyCode","document","addEventListener","removeEventListener","Provider","removeItem","changeLikeCardStatus","newCard","newCards","c","setItem","changeAvatar","update","setUserInfo","addCard","isEnabled","removeCard","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.245839eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header-logo.855a8c98.svg\";","module.exports = __webpack_public_path__ + \"static/media/success.e38b395c.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.4072126c.svg\";","import React from \"react\";\r\nimport { Link, Route } from 'react-router-dom';\r\nimport logo from '../images/header-logo.svg';\r\n\r\nfunction Header({ loggedIn, userEmail, onClick }) {\r\n    return (\r\n        <header className=\"header\">\r\n            <Link to=\"/\" className=\"header__link\">\r\n                <img src={logo} alt=\"Логотип сайта\" className=\"header__logo\" />\r\n            </Link>\r\n            <ul className=\"header__nav\">\r\n                <Route exact path=\"/\">\r\n                    <li className=\"header__nav-item\">\r\n                        <p className=\"header__user-email\">{userEmail}</p>\r\n                    </li>\r\n                    <li className=\"header__nav-item\">\r\n                        <button\r\n                            onClick={onClick}\r\n                            className=\"link header__link header__button header__button_signOut\"\r\n                        >\r\n                            Выход\r\n            </button>\r\n                    </li>\r\n                </Route>\r\n                <Route path=\"/sign-in\">\r\n                    <li className=\"header__nav-item\">\r\n                        <Link\r\n                            to=\"/sign-up\"\r\n                            className=\"link header__link header__link_sign-up\"\r\n                        >\r\n                            Регистрация\r\n            </Link>\r\n                    </li>\r\n                </Route>\r\n                <Route path=\"/sign-up\">\r\n                    <li className=\"header__nav-item\">\r\n                        <Link\r\n                            to=\"/sign-in\"\r\n                            className=\"header__link header__link_sign-in\"\r\n                        >\r\n                            Вход\r\n            </Link>\r\n                    </li>\r\n                </Route>\r\n            </ul>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\r\n    const { _id } = React.useContext(CurrentUserContext);\r\n\r\n    function handleClick() {\r\n        onCardClick(card);\r\n    }\r\n\r\n    function handleLikeClick() {\r\n        onCardLike(card);\r\n    }\r\n\r\n    function handleDeleteClick() {\r\n        onCardDelete(card);\r\n    }\r\n\r\n    const isOwn = card.owner._id === _id;\r\n    const isLiked = card.likes.some((i) => i._id === _id);\r\n\r\n    return (\r\n        <li className=\"card\">\r\n            {isOwn ? (\r\n                <button\r\n                    className=\"card__remove-button\"\r\n                    type=\"button\"\r\n                    aria-label=\"Удалить карточку\"\r\n                    onClick={handleDeleteClick}\r\n                ></button>\r\n            ) : (\r\n                    ''\r\n                )}\r\n            <img\r\n                src={card.link}\r\n                alt={`Лучшая фотография ${card.name}`}\r\n                className=\"card__image\"\r\n                onClick={handleClick}\r\n            />\r\n            <div className=\"card__description\">\r\n                <p className=\"card__name\">{card.name}</p>\r\n                <div className=\"card__like-cover\">\r\n                    <button\r\n                        className={`${isLiked ? `card__like card__like_active` : `card__like`}`}\r\n                        type=\"button\"\r\n                        aria-label=\"Поставить лайк\"\r\n                        onClick={handleLikeClick}\r\n                    />\r\n                    <span className=\"card__like-counter\">{card.likes.length}</span>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\n\r\nfunction Main({\r\n    onEditAvatar,\r\n    onEditProfile,\r\n    onAddPlace,\r\n    onCardClick,\r\n    cards,\r\n    onCardLike,\r\n    onCardDelete,\r\n    isCardsLoading,\r\n}) {\r\n    const { name, about, avatar } = React.useContext(CurrentUserContext);\r\n\r\n    return (\r\n        <>\r\n            <section className=\"profile\">\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={onEditAvatar}\r\n                    className=\"profile__avatar-button\"\r\n                >\r\n                    <img\r\n                        className=\"profile__avatar\"\r\n                        src={avatar}\r\n                        alt=\"Аватар пользователя\"\r\n                    />\r\n                </button>\r\n                <div className=\"profile__info\">\r\n                    <h1 className=\"profile__name\">{name}</h1>\r\n                    <button\r\n                        className=\"profile__button-edit\"\r\n                        onClick={onEditProfile}\r\n                        type=\"button\"\r\n                        aria-label=\"Редактировать информацию пользователя\"\r\n                    ></button>\r\n                    <p className=\"profile__profession\">{about}</p>\r\n                </div>\r\n                <button\r\n                    className=\"profile__button-add\"\r\n                    type=\"button\"\r\n                    onClick={onAddPlace}\r\n                    aria-label=\"Добавить информацию\"\r\n                ></button>\r\n            </section>\r\n            <section className=\"elements\">\r\n                <ul className=\"elements__list\">\r\n                    {isCardsLoading ? (\r\n                        <div className=\"elements__loading-spinner\">\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                        </div>\r\n                    ) : (\r\n                            cards.map((card) => (\r\n                                <Card\r\n                                    key={card._id}\r\n                                    card={card}\r\n                                    onCardLike={onCardLike}\r\n                                    onCardDelete={onCardDelete}\r\n                                    onCardClick={onCardClick}\r\n                                />\r\n                            ))\r\n                        )}\r\n                </ul>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from \"react\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { forwardRef } from \"react\";\r\n\r\nconst PopupWithForm = forwardRef(\r\n    (\r\n        {\r\n            isValid = true,\r\n            name,\r\n            title,\r\n            children,\r\n            isOpen,\r\n            onClose,\r\n            onSubmit,\r\n            buttonText,\r\n        },\r\n        ref\r\n    ) => {\r\n        return (\r\n            <section\r\n                className={`popup popup_type${name} ${isOpen ? 'popup_opened' : ''}`}\r\n            >\r\n                <div\r\n                    onClick={onClose}\r\n                    className={`popup__overlay popup__overlay_${name}`}\r\n                ></div>\r\n                <form\r\n                    ref={ref}\r\n                    className={`popup__container popup__container_type_${name}`}\r\n                    name={name}\r\n                    action=\"#\"\r\n                    onSubmit={onSubmit}\r\n                    noValidate >\r\n                    <h2 className=\"popup__title\">{title}</h2>\r\n                    <fieldset className=\"popup__input-container\">{children}</fieldset>\r\n                    <button\r\n                        className={`popup__button popup__button_type_save ${isValid ? '' : 'popup__button_type_disabled'\r\n                            }`}\r\n                        type=\"submit\"\r\n                        disabled={!isValid}\r\n                    >\r\n                        {buttonText || 'Сохранить'}\r\n                    </button>\r\n                    <button\r\n                        className={`popup__close popup__close_type_${name}`}\r\n                        onClick={onClose}\r\n                        type=\"button\"\r\n                        aria-label=\"Закрыть окно\"\r\n                    ></button>\r\n                </form>\r\n            </section>\r\n        );\r\n    }\r\n);\r\n\r\nexport default PopupWithForm;","import { useCallback, useState } from 'react';\r\n\r\nexport function useFormWithValidation() {\r\n    const [values, setValues] = useState({});\r\n    const [errors, setErrors] = useState({});\r\n    const [isValid, setIsValid] = useState({});\r\n\r\n    const handleChange = (event) => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n        setValues({ ...values, [name]: value });\r\n        setErrors({ ...errors, [name]: target.validationMessage });\r\n    };\r\n\r\n    const resetForm = useCallback(\r\n        (newValues = {}, newErrors = {}, newIsValid = false) => {\r\n            setValues(newValues);\r\n            setErrors(newErrors);\r\n            setIsValid(newIsValid);\r\n        },\r\n        [setValues, setErrors, setIsValid]\r\n    );\r\n\r\n    return { values, handleChange, errors, isValid, resetForm, setIsValid };\r\n}","import React from 'react';\r\n\r\nconst Input = ({\r\n    changeValue,\r\n    classBlock,\r\n    name,\r\n    value,\r\n    validationMessage,\r\n    ...rest\r\n}) => {\r\n    function handleInputChange(e) {\r\n        changeValue(e);\r\n    }\r\n\r\n    return (\r\n        <div className={`input__container ${classBlock}__input-container`}>\r\n            <input\r\n                {...rest}\r\n                className={`input ${classBlock}__input ${classBlock}__input_type_${name}`}\r\n                name={name}\r\n                onChange={handleInputChange}\r\n                value={value || ''}\r\n            />\r\n            <span className={`input__error ${classBlock}__error`}>\r\n                {validationMessage || ''}\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;","import React, { createRef, useContext, useEffect } from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { useFormWithValidation } from '../hooks/useFormWithValidation';\r\nimport Input from './Input';\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser, isSending }) {\r\n    const currentUser = useContext(CurrentUserContext);\r\n    const valid = createRef();\r\n    const {\r\n        values,\r\n        handleChange,\r\n        errors,\r\n        isValid,\r\n        setIsValid,\r\n        resetForm,\r\n    } = useFormWithValidation();\r\n\r\n    useEffect(() => {\r\n        setIsValid(valid.current.checkValidity());\r\n    }, [setIsValid, valid]);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onUpdateUser(values);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            resetForm(currentUser);\r\n        }\r\n    }, [currentUser, resetForm, isOpen]);\r\n\r\n    return (\r\n        <PopupWithForm\r\n            ref={valid}\r\n            name=\"edit-profile\"\r\n            title=\"Редактировать профиль\"\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            isValid={isValid}\r\n            buttonText={isSending ? 'Сохранение...' : 'Сохранить'}\r\n        >\r\n            <Input\r\n                value={values.name}\r\n                changeValue={handleChange}\r\n                classBlock=\"popup\"\r\n                name=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Ваше имя\"\r\n                required\r\n                minLength=\"2\"\r\n                maxLength=\"40\"\r\n                autoComplete=\"off\"\r\n                validationMessage={errors.name}\r\n            />\r\n            <Input\r\n                value={values.about}\r\n                changeValue={handleChange}\r\n                classBlock=\"popup\"\r\n                name=\"about\"\r\n                type=\"text\"\r\n                placeholder=\"Профессия\"\r\n                required\r\n                minLength=\"2\"\r\n                maxLength=\"200\"\r\n                autoComplete=\"off\"\r\n                validationMessage={errors.about}\r\n            />\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditProfilePopup;","import React, { createRef, useEffect } from \"react\";\r\nimport Input from './Input';\r\nimport { useFormWithValidation } from '../hooks/useFormWithValidation';\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\n\r\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar, isSending }) {\r\n    const valid = createRef();\r\n    const {\r\n        values,\r\n        handleChange,\r\n        errors,\r\n        isValid,\r\n        setIsValid,\r\n        resetForm,\r\n    } = useFormWithValidation();\r\n\r\n    useEffect(() => {\r\n        setIsValid(valid.current.checkValidity());\r\n    }, [setIsValid, valid]);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onUpdateAvatar(values);\r\n    }\r\n\r\n    useEffect(() => {\r\n        resetForm();\r\n    }, [resetForm, isOpen]);\r\n\r\n    return (\r\n        <PopupWithForm\r\n            ref={valid}\r\n            name=\"avatar-change\"\r\n            title=\"Обновить аватар\"\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            isValid={isValid}\r\n            buttonText={isSending ? 'Сохранение...' : 'Сохранить'}\r\n        >\r\n            <Input\r\n                value={values.avatar}\r\n                changeValue={handleChange}\r\n                classBlock=\"popup\"\r\n                name=\"avatar\"\r\n                type=\"url\"\r\n                placeholder=\"Ссылка на картинку\"\r\n                required\r\n                autoComplete=\"off\"\r\n                validationMessage={errors.avatar}\r\n            />\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditAvatarPopup;","import React, { createRef, useEffect } from \"react\";\r\nimport { useFormWithValidation } from '../hooks/useFormWithValidation';\r\nimport Input from './Input';\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace, isSending }) {\r\n    const valid = createRef();\r\n    const {\r\n        values,\r\n        handleChange,\r\n        errors,\r\n        isValid,\r\n        setIsValid,\r\n        resetForm,\r\n    } = useFormWithValidation();\r\n\r\n    useEffect(() => {\r\n        setIsValid(valid.current.checkValidity());\r\n    }, [setIsValid, valid]);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onAddPlace(values);\r\n    }\r\n\r\n    useEffect(() => {\r\n        resetForm();\r\n    }, [resetForm, isOpen]);\r\n\r\n    return (\r\n        <PopupWithForm\r\n            ref={valid}\r\n            name=\"add-places\"\r\n            title=\"Новое место\"\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            isValid={isValid}\r\n            buttonText={isSending ? 'Сохранение...' : 'Сохранить'}\r\n        >\r\n            <Input\r\n                value={values.name}\r\n                changeValue={handleChange}\r\n                classBlock=\"popup\"\r\n                name=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Название\"\r\n                required\r\n                minLength=\"1\"\r\n                maxLength=\"30\"\r\n                autoComplete=\"off\"\r\n                validationMessage={errors.name}\r\n            />\r\n            <Input\r\n                value={values.link}\r\n                changeValue={handleChange}\r\n                classBlock=\"popup\"\r\n                name=\"link\"\r\n                type=\"url\"\r\n                placeholder=\"Ссылка на картинку\"\r\n                required\r\n                autoComplete=\"off\"\r\n                validationMessage={errors.link}\r\n            />\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default AddPlacePopup;","import React from \"react\";\r\n\r\nfunction ImagePopup({ card, onClose }) {\r\n    return (\r\n        <section\r\n            className={`popup popup_type_img ${card.isOpen ? 'popup_opened' : ''\r\n                }`}\r\n        >\r\n            <div\r\n                onClick={onClose}\r\n                className=\"popup__overlay popup__overlay_image-card\"\r\n            ></div>\r\n            <div className=\"popup__img-container\">\r\n                <figure className=\"popup__figure\">\r\n                    <img\r\n                        src={card.link}\r\n                        alt={`Лучшая фотография ${card.name}`}\r\n                        className=\"popup__image\"\r\n                    />\r\n                    <figcaption className=\"popup__caption\">{card.name}</figcaption>\r\n                    <button\r\n                        className=\"popup__close\"\r\n                        type=\"button\"\r\n                        aria-label=\"Закрыть окно\"\r\n                        onClick={onClose}\r\n                    ></button>\r\n                </figure>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;\r\n\r\n","import {\r\n    currentUser\r\n} from \"./utils\";\r\n\r\nclass Api {\r\n    constructor({\r\n        baseUrl,\r\n        headers\r\n    }) {\r\n        this._url = baseUrl;\r\n        this._headers = headers;\r\n    }\r\n\r\n    _handleResponse(response) {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${response.status}`);\r\n    }\r\n\r\n    getInitialCards() {\r\n        return fetch(`${this._url}cards`, {\r\n            headers: this._headers,\r\n        }).then((res) => this._handleResponse(res));\r\n    }\r\n\r\n    getUserInfo() {\r\n        return fetch(`${this._url}users/me`, {\r\n            headers: this._headers,\r\n        }).then((res) => this._handleResponse(res));\r\n    }\r\n\r\n    setUserInfo(formData) {\r\n        return fetch(`${this._url}users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: formData.name,\r\n                about: formData.about,\r\n            }),\r\n        }).then((res) => this._handleResponse(res));\r\n    }\r\n\r\n    addCard(formData) {\r\n        return fetch(`${this._url}cards`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: formData.name,\r\n                link: formData.link,\r\n            }),\r\n        }).then((res) => this._handleResponse(res));\r\n    }\r\n\r\n    removeCard(id) {\r\n        return fetch(`${this._url}cards/${id}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers,\r\n        }).then((res) => this._handleResponse(res));\r\n    }\r\n\r\n    addLike(id) {\r\n        return fetch(`${this._url}cards/likes/${id}`, {\r\n            method: 'PUT',\r\n            headers: this._headers,\r\n        }).then((res) => this._handleResponse(res));\r\n    }\r\n\r\n    removeLike(id) {\r\n        return fetch(`${this._url}cards/likes/${id}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers,\r\n        }).then((res) => this._handleResponse(res));\r\n    }\r\n\r\n    changeAvatar(formData) {\r\n        return fetch(`${this._url}users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: formData.avatar,\r\n            }),\r\n        }).then((res) => this._handleResponse(res));\r\n    }\r\n\r\n    changeLikeCardStatus(id, like) {\r\n        return fetch(`${this._url}cards/likes/${id}`, {\r\n            method: like ? 'PUT' : 'DELETE',\r\n            headers: this._headers,\r\n        }).then((res) => this._handleResponse(res));\r\n    }\r\n}\r\n\r\nconst api = new Api(currentUser);\r\nexport default api;","\r\n//Базовый URL для запросов\r\n\r\nexport const currentUser = {\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14/',\r\n    headers: {\r\n        authorization: 'ccd33dbf-109f-4270-9c16-faebaa7150cb',\r\n        'Content-Type': 'application/json',\r\n    },\r\n};\r\n\r\n","import React, { createRef, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useFormWithValidation } from '../hooks/useFormWithValidation';\r\nimport Input from './Input';\r\n\r\nconst AuthForm = ({\r\n    className,\r\n    title = 'Заголовок формы',\r\n    buttonText = 'Сабмит формы',\r\n    loginLink,\r\n    onSubmit,\r\n}) => {\r\n    const {\r\n        values,\r\n        handleChange,\r\n        errors,\r\n        isValid,\r\n        setIsValid,\r\n        resetForm,\r\n    } = useFormWithValidation();\r\n\r\n    const valid = createRef();\r\n    useEffect(() => {\r\n        setIsValid(valid.current.checkValidity());\r\n    }, [setIsValid, valid]);\r\n\r\n    const handleSubmit = (e) => {\r\n        onSubmit(e, values);\r\n        resetForm();\r\n    };\r\n\r\n    return (\r\n        <form\r\n            ref={valid}\r\n            className={`auth-form ${className}`}\r\n            onSubmit={handleSubmit}\r\n            name={className}\r\n            action=\"#\"\r\n            noValidate\r\n        >\r\n            <h3 className=\"auth-form__title\">{title}</h3>\r\n            <fieldset className=\"auth-form__container\">\r\n                <Input\r\n                    value={values.email}\r\n                    changeValue={handleChange}\r\n                    classBlock=\"auth-form\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    validationMessage={errors.email}\r\n                />\r\n                <Input\r\n                    value={values.password}\r\n                    changeValue={handleChange}\r\n                    classBlock=\"auth-form\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Пароль\"\r\n                    required\r\n                    autoComplete=\"off\"\r\n                    validationMessage={errors.password}\r\n                />\r\n            </fieldset>\r\n            <button\r\n                type=\"submit\"\r\n                aria-label=\"Отправить данные\"\r\n                className={`auth-form__button auth-form__button_submit ${isValid ? '' : 'auth-form__button_submit_disabled'\r\n                    }`}\r\n                disabled={!isValid}\r\n            >\r\n                {buttonText}\r\n            </button>\r\n            <Link to=\"/sign-in\" className=\"auth-form__is-login-link\">\r\n                {loginLink ? 'Уже зарегестрированны? Войти' : ''}\r\n            </Link>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import React from 'react';\r\nimport AuthForm from './AuthForm';\r\n\r\nconst Login = ({ onLogin }) => {\r\n    const handleSubmit = (e, registerForm) => {\r\n        e.preventDefault();\r\n        const { email, password } = registerForm;\r\n        onLogin(email, password);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AuthForm\r\n                className=\"login\"\r\n                title=\"Вход\"\r\n                buttonText=\"Войти\"\r\n                loginLink={false}\r\n                onSubmit={handleSubmit}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport AuthForm from './AuthForm';\r\n\r\nconst Register = ({ onRegister }) => {\r\n    const handleSubmit = (e, registerForm) => {\r\n        e.preventDefault();\r\n        const { email, password } = registerForm;\r\n        onRegister(email, password);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AuthForm\r\n                className=\"register\"\r\n                title=\"Регистрация\"\r\n                buttonText=\"Зарегистрироваться\"\r\n                loginLink={true}\r\n                onSubmit={handleSubmit}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ loggedIn, ...routeProps }) => {\r\n    return loggedIn ? <Route {...routeProps} /> : <Redirect to=\"/sign-in\" />;\r\n};\r\n\r\nexport default ProtectedRoute;","export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nconst handleResponse = (response) => {\r\n    if (response.ok) {\r\n        return response.json();\r\n    }\r\n    return Promise.reject(response.status);\r\n};\r\n\r\nexport const register = (email, password) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ password, email }),\r\n    }).then((res) => handleResponse(res));\r\n};\r\n\r\nexport const authorize = (email, password) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ password, email }),\r\n    }).then((res) => handleResponse(res));\r\n};\r\n\r\nexport const getContent = (token) => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n        method: 'GET',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    }).then((res) => handleResponse(res));\r\n};\r\n","import React from 'react';\r\nimport success from '../images/success.svg';\r\nimport error from '../images/error.svg';\r\n\r\nconst InfoTooltip = ({ message, isOpen, isSuccess, onClose }) => {\r\n    return (\r\n        <section\r\n            className={`infotooltip popup popup_infotooltip ${isOpen ? 'popup_opened' : ''\r\n                }`}\r\n        >\r\n            <div\r\n                onClick={onClose}\r\n                className=\"popup__overlay popup__overlay_infotooltip\"\r\n            ></div>\r\n            <div className=\"infotooltip__container\">\r\n                {isSuccess ? <img src={success} alt=\"успешно\" /> : <img src={error} alt=\"ошибка\" />}\r\n                <h3 className=\"infotooltip__title\">{message}</h3>\r\n                <button\r\n                    className=\"popup__close popup__close_infotooltip\"\r\n                    type=\"button\"\r\n                    aria-label=\"Закрыть окно\"\r\n                    onClick={onClose}\r\n                ></button>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default InfoTooltip;","import React, { useEffect, useState } from 'react';\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from './PopupWithForm.js';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport Login from './Login.js';\nimport Register from './Register.js';\nimport ProtectedRoute from './ProtectedRoute.js';\nimport * as auth from '../utils/auth';\nimport InfoTooltip from './InfoTooltip.js';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction App() {\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState({});\n    const [currentUser, setCurrentUser] = useState({});\n    const [cards, setCards] = useState([]);\n    const [cardDelete, setCardDelete] = useState({});\n    const [isDeletteReqPopupOpen, setIsDeletteReqPopupOpen] = useState(false);\n    const [isCardsLoading, setIsCardsLoading] = useState(false);\n    const [isDataSending, setDataSending] = useState(false);\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = useState(false);\n    const [isInfoTooltipTypeSuccess, setIsInfoTooltipTypeSuccess] = useState(\n        false\n    );\n    const [infoTooltipMessage, setInfoTooltipMessage] = useState('');\n    const [userEmail, setUserEmail] = useState('');\n    const history = useHistory();\n\n    useEffect(() => {\n        setIsCardsLoading(true);\n        Promise.all([api.getInitialCards(), api.getUserInfo()])\n            .then(([cardElements, user]) => {\n                setCards(cardElements);\n                setCurrentUser(user);\n            })\n            .catch((err) => console.error(err))\n            .finally(() => setIsCardsLoading(false));\n    }, []);\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some((i) => i._id === currentUser._id);\n        api\n            .changeLikeCardStatus(card._id, !isLiked)\n            .then((newCard) => {\n                const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n                setCards(newCards);\n            })\n            .catch((err) => console.error(err));\n    }\n\n    function handleCardDeleteRequest(card) {\n        setCardDelete(card);\n        setIsDeletteReqPopupOpen(true);\n    }\n\n    function handleCardDelete(e) {\n        setDataSending(true);\n        e.preventDefault();\n        api\n            .removeCard(cardDelete._id)\n            .then(() => {\n                const newCards = cards.filter((c) => c !== cardDelete);\n                setCards(newCards);\n            })\n            .then(() => setIsDeletteReqPopupOpen(false))\n            .catch((err) => console.error(err))\n            .finally(() => setDataSending(false));\n    }\n\n    function handleEditAvatarClick() {\n        setEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard({ ...card, isOpen: true });\n    }\n\n    function closeAllPopups() {\n        setEditProfilePopupOpen(false);\n        setAddPlacePopupOpen(false);\n        setEditAvatarPopupOpen(false);\n        setSelectedCard({});\n        setIsDeletteReqPopupOpen(false);\n        setIsInfoTooltipPopupOpen(false);\n    }\n\n    function handleUpdateUser(user) {\n        setDataSending(true);\n        api\n            .setUserInfo(user)\n            .then((update) => setCurrentUser(update))\n            .then(() => closeAllPopups())\n            .catch((err) => console.error(err))\n            .finally(() => setDataSending(false));\n    }\n\n    function handleUpdateAvatar(avatar) {\n        setDataSending(true);\n        api\n            .changeAvatar(avatar)\n            .then((update) => setCurrentUser(update))\n            .then(() => closeAllPopups())\n            .catch((err) => console.error(err))\n            .finally(() => setDataSending(false));\n    }\n\n    function handleAddPlaceSubmit(card) {\n        setDataSending(true);\n        api\n            .addCard(card)\n            .then((update) => setCards([update, ...cards]))\n            .then(() => closeAllPopups())\n            .catch((err) => console.error(err))\n            .finally(() => setDataSending(false));\n    }\n\n    useEffect(() => {\n        function escFunction(e) {\n            if (e.keyCode === 27) closeAllPopups();\n        }\n        document.addEventListener('keydown', escFunction);\n\n        return () => {\n            document.removeEventListener('keydown', escFunction);\n        };\n    }, []);\n\n    function onRegister(email, password) {\n        auth\n            .register(email, password)\n            .then((data) => {\n                if (data) {\n                    setInfoTooltipMessage('Вы успешно зарегистрировались!');\n                    setIsInfoTooltipPopupOpen(true);\n                    setIsInfoTooltipTypeSuccess(true);\n                    history.push('/sign-in');\n                }\n            })\n            .catch((err) => {\n                setInfoTooltipMessage('Что-то пошло не так! Попробуйте ещё раз.');\n                setIsInfoTooltipPopupOpen(true);\n                setIsInfoTooltipTypeSuccess(false);\n                if (err === 400)\n                    return console.log('Ошибка: некорректно заполнено одно из полей');\n                console.log(err);\n            });\n    }\n\n    function onLogin(email, password) {\n        auth\n            .authorize(email, password)\n            .then((data) => {\n                if (data.token) {\n                    localStorage.setItem('token', data.token);\n                    setUserEmail(email);\n                    setLoggedIn(true);\n                    history.push('/');\n                }\n            })\n            .catch((err) => {\n                setInfoTooltipMessage('Неверный логин или пароль! Попробуйте ещё раз.');\n                setIsInfoTooltipPopupOpen(true);\n                setIsInfoTooltipTypeSuccess(false);\n                if (err === 400) return console.log('не передано одно из полей');\n                if (err === 401) return console.log('пользователь с email не найден');\n                console.log(err);\n            });\n    }\n\n    function tokenCheck() {\n        const token = localStorage.getItem('token');\n        if (token) {\n            auth\n                .getContent(token)\n                .then((userData) => {\n                    setLoggedIn(true);\n                    setUserEmail(userData.data.email);\n                    history.push('/');\n                })\n                .catch((err) => {\n                    if (err === 400)\n                        return console.log('Токен не передан или передан не в том формате');\n                    if (err === 401) return console.log('Переданный токен некорректен');\n                    console.log(err);\n                });\n        }\n    }\n\n    useEffect(() => {\n        tokenCheck();\n        // eslint-disable-next-line\n    }, []);\n\n    function onSignOut() {\n        localStorage.removeItem('token');\n        setLoggedIn(false);\n        history.push('/sign-in');\n    }\n\n    return (\n        <div className=\"page\">\n            <CurrentUserContext.Provider value={currentUser}>\n                <Header\n                    loggedIn={loggedIn}\n                    userEmail={userEmail}\n                    onClick={onSignOut}\n                />\n                <main className=\"content\">\n                    <Switch>\n                        <ProtectedRoute exact path=\"/\" loggedIn={loggedIn}>\n                            <Main\n                                onEditAvatar={handleEditAvatarClick}\n                                onEditProfile={handleEditProfileClick}\n                                onAddPlace={handleAddPlaceClick}\n                                onCardClick={handleCardClick}\n                                cards={cards}\n                                onCardLike={handleCardLike}\n                                onCardDelete={handleCardDeleteRequest}\n                                isCardsLoading={isCardsLoading}\n                            />\n                        </ProtectedRoute>\n                        <Route path=\"/sign-up\">\n                            <Register onRegister={onRegister} />\n                        </Route>\n                        <Route path=\"/sign-in\">\n                            <Login onLogin={onLogin} />\n                        </Route>\n                        <Route>\n                            {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\n                        </Route>\n                    </Switch>\n                </main>\n                <Footer />\n\n                <InfoTooltip\n                    message={infoTooltipMessage}\n                    isSuccess={isInfoTooltipTypeSuccess}\n                    isOpen={isInfoTooltipPopupOpen}\n                    onClose={closeAllPopups}\n                />\n\n                <EditAvatarPopup\n                    isSending={isDataSending}\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar}\n                />\n\n                <EditProfilePopup\n                    isSending={isDataSending}\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                />\n\n                <AddPlacePopup\n                    isSending={isDataSending}\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit}\n                />\n\n                <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n\n                <PopupWithForm\n                    isEnabled=\"true\"\n                    name=\"card-delete\"\n                    title=\"Вы уверены?\"\n                    isOpen={isDeletteReqPopupOpen}\n                    onClose={closeAllPopups}\n                    onSubmit={handleCardDelete}\n                    buttonText={isDataSending ? 'Удаление...' : 'Да'}\n                />\n            </CurrentUserContext.Provider>\n        </div>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}